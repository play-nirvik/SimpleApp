// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage renders correctly 1`] = `
<View
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "transparent",
      },
    ]
  }
>
  <Text
    style={
      [
        {
          "color": "green",
          "flex": 1,
          "fontSize": 40,
          "padding": 20,
        },
        {
          "color": "#111",
        },
      ]
    }
  >
    greeting
    , 
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "left": 20,
        "position": "absolute",
        "top": "20%",
      }
    }
  >
    <Text>
      push.title
    </Text>
  </View>
  <View
    style={
      [
        {
          "width": "100%",
        },
        {
          "zIndex": 5000,
        },
        {},
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#fff",
          "borderColor": "#000",
          "borderRadius": 8,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "marginBottom": 20,
          "minHeight": 50,
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 3,
          "verticalAlign": "middle",
          "width": "40%",
          "zIndex": 5000,
        }
      }
      testID="languageDropdownButton"
    >
      <Text
        style={
          [
            {
              "color": "#000",
              "flex": 1,
            },
            {},
            {},
            false,
          ]
        }
      >
        English
      </Text>
      <View
        style={
          [
            {
              "marginLeft": 10,
            },
            {},
          ]
        }
      >
        <Image
          source={
            {
              "testUri": "../../react-native-dropdown-picker/src/themes/light/icons/arrow-down.png",
            }
          }
          style={
            [
              {
                "height": 20,
                "width": 20,
              },
              {},
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;
